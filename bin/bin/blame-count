#!/bin/bash

print_usage() {
  echo "Usage: $0 [-a author] [-e email] [-d directory] [-f file_pattern]"
  echo "Options:"
  echo "  -a author        Search by author name (case-insensitive)"
  echo "  -e email         Search by email address"
  echo "  -d directory     Specify directory to search (default: current directory)"
  echo "  -f file_pattern  File pattern to include (e.g., '*.js', '*.py')"
  echo "  -h              Show this help message"
}

author=""
email=""
directory="."
file_pattern=""

while getopts "a:e:d:f:h" opt; do
  case $opt in
  a) author="$OPTARG" ;;
  e) email="$OPTARG" ;;
  d) directory="$OPTARG" ;;
  f) file_pattern="$OPTARG" ;;
  h)
    print_usage
    exit 0
    ;;
  ?)
    print_usage
    exit 1
    ;;
  esac
done

if [ -z "$author" ] && [ -z "$email" ]; then
  echo "Error: Must specify either author (-a) or email (-e)"
  print_usage
  exit 1
fi

if [ ! -d "$directory" ]; then
  echo "Error: Directory '$directory' does not exist"
  exit 1
fi

ls_files_cmd="git ls-files"
if [ ! -z "$file_pattern" ]; then
  ls_files_cmd="$ls_files_cmd \"$file_pattern\""
fi

if [ ! -z "$author" ]; then
  pattern="$author"
else
  pattern="$email"
fi

cd "$directory"

echo "Counting lines... This may take a while for large repositories."
echo "Processing files in $directory"

total_lines=0
file_count=0

while IFS= read -r file; do
  if [ -f "$file" ]; then
    if [ ! -z "$email" ]; then
      lines=$(git blame --line-porcelain "$file" | grep "author-mail <$email>" -B 1 | grep "^author " | wc -l)
    else
      lines=$(git blame --line-porcelain "$file" | grep -i "^author $author" | wc -l)
    fi

    total_lines=$((total_lines + lines))
    if [ $lines -gt 0 ]; then
      echo "$file: $lines lines"
      file_count=$((file_count + 1))
    fi
  fi
done < <(eval "$ls_files_cmd")

echo "----------------------------------------"
echo "Summary:"
echo "Total lines attributed to $pattern: $total_lines"
echo "Files with matching contributions: $file_count"
